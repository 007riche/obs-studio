Compilation instructions!  Temporary quick compilation instructions!
Will give better instructions later when things are in a more complete state.

Windows:
  - Use VS2013, as obs-studio uses C99 and C++11

  - Download latest FFmpeg and wxWidgets repositories

  - Create a windows environment variable FFmpegPath.  Set it to your FFmpeg
    repo path

  - Create a windows environment variable wxWidgetsPath.  Set it to your
    wxWidgets repo path

  - Compile wxWidgets and FFmpeg.  They should both be compiled with VS2013.
    Convert the VS2010 project file for wxWidgets, and for compiling FFmpeg,
    see http://ffmpeg.org/platform.html#Windows

  - Create two directories in FFmpeg directory, lib32 and lib64.  Place the
    lib files generated by FFmpeg into these directories for the respective
    architecture

  - If compiling FFmpeg with shared libraries (DLLs), place the DLLs into
    build/bin/32bit and/or build/bin/64bit respectively

  - Compile project with VS2013, and it should be good to go.

  - NOTE: Direct3D 11 library may require D3Dcompiler_47.dll to be present
    in both the obs-studio/build/bin/32bit and obs-studio/build/bin/64bit
    directories


Mac OSX
  - Use macports or homebrew and get wxWidgets 3.0, FFmpeg, glew, cmake.

  - Building via autotools not yet supported

  - In a terminal, go to the obs-studio/build directory, then to build, type:
    cmake .. && make

  - It builds in a modular structure similar to windows, where everything
    necessary to run the program is compiled to obs-studio/build

  - You can also use ccmake to create an app bundle, which makes it so you
    don't have to use the terminal to execute it from the correct directory


Linux
  - Definitely want to use autotools, as cmake files are currently made more
    for OSX

  - If using debian-based distributions, you may have to get the latest FFmpeg
    repo -- default debian packages seem to be a bit lacking, so you might have
    to either get precompiled packages from http://deb-multimedia.org/ (or
    similar sources, use your own judgement) or get the latest FFmpeg repo,
    compile, and do a make install

  - Instructions pending -- linux code still under construction, and not yet
    fully functioning.  Will add more information later
